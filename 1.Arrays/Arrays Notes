Arrays

An array is a data structure that can hold a collection of values.

Arrays can contain a mix of different data types.
You can store strings, booleans, numbers or even objects all in the same array.

Arrays are resizable. You do not have to declare a size of array before creating it

JS arrays are zero indexed and the insertion order is maintained

Arrays are iterable. They can be used with a for of loop.
--------------------------------------------------------------------------------------

1.Printing array: console.log(arr)
2.printing first element in array. console.log(arr[0])
3.Adding an element to the array We use Push arr.push(3)
arr.push(4)
4.Adding element in the beginning of the array arr.unshift(6)
arr.unshift(5)
5.removing element from last - We use pop 
arr.pop()
6.removing element from first - we use .shift
arr.shift()
7.For of loop : To print all elements in array 
for (const items of arr){
    console.log(items)
}

8.map : Creates a new array by applying a function to each element in the original array.
Returns a new array with the type of each element in arr.
9.filter : Creates a new array with elements that pass a specified condition.
Creates a new array with elements that pass a specified condition.
10.reduce: Reduces the array to a single value by applying a function to each element.
Explanation: Sums up all numbers in the array. (Filtered out non-numbers first for clarity.)
11.concat: Merges two or more arrays into one.
Combines arr with [4, 5] into a new array.
12.slice: Extracts a section of the array and returns it as a new array.
Extracts elements from index 1 up to (but not including) index 3.
13.splice: Modifies the original array by adding or removing elements.
Removes 1 element at index 2 (3) and replaces it with 'newElement'. Modifies the original array.

Arrays Big O time complexity 

Insert/ Remove from end -O(1)
Insert/ Remove from beginning -O(n) (Because index has to be reset for every element in array )
Accessing element -O(1)
Searching - O(n)
Push/Pop -O(1)

Shift/unshift/concat/slice/splice - O(n)
forEach/map/reduce/filter - O(n)